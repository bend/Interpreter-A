/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Scripter.java
 *
 * Created on Feb 2, 2010, 3:54:40 PM
 */
package com.ben.IA.Views.utilities;

import com.ben.IA.brain.scripter.Interpreter;
import com.ben.IA.brain.scripter.MemUsageView;
import com.ben.IA.brain.scripter.Reader;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ActionMap;
import javax.swing.JFileChooser;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledDocument;

/**
 *
 * @author benoitdaccache
 */
public class Scripter extends javax.swing.JFrame {

    private Interpreter intertpreter;
    private MemUsageView memusage;
    private StyledDocument styledDocument;
    private SyntaxHighliter highlight;

    /** Creates new form Scripter */
    public Scripter() {
        initComponents();
        ActionMap am = scriptEditorTextPane.getActionMap();
        am.put(DefaultEditorKit.insertBreakAction, new IndentBreakAction());
        highlight = new SyntaxHighliter(scriptEditorTextPane);
        highlight.start();
    }

    public void appendToConsole(String message) {
        try {
            consoleTextArea.setText(consoleTextArea.getText() + message + "\n");
        } catch (Exception e) {
        }
    }

    public void markstop() {
        stopButton.setEnabled(false);
        executeButton.setEnabled(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        scriptEditorTextPane = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();
        executeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        labelMem = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        memMenuItem = new javax.swing.JMenuItem();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        scriptEditorTextPane.setName("scriptEditorTextPane"); // NOI18N
        jScrollPane2.setViewportView(scriptEditorTextPane);

        jSplitPane1.setLeftComponent(jScrollPane2);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.ben.IA.App.IAApp.class).getContext().getResourceMap(Scripter.class);
        consoleTextArea.setBackground(resourceMap.getColor("consoleTextArea.background")); // NOI18N
        consoleTextArea.setColumns(20);
        consoleTextArea.setForeground(resourceMap.getColor("consoleTextArea.foreground")); // NOI18N
        consoleTextArea.setRows(5);
        consoleTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("consoleTextArea.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), resourceMap.getColor("consoleTextArea.border.titleColor"))); // NOI18N
        consoleTextArea.setName("consoleTextArea"); // NOI18N
        jScrollPane3.setViewportView(consoleTextArea);

        jSplitPane1.setRightComponent(jScrollPane3);

        executeButton.setText(resourceMap.getString("executeButton.text")); // NOI18N
        executeButton.setName("executeButton"); // NOI18N
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });

        clearButton.setText(resourceMap.getString("clearButton.text")); // NOI18N
        clearButton.setName("clearButton"); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(resourceMap.getIcon("stopButton.icon")); // NOI18N
        stopButton.setText(resourceMap.getString("stopButton.text")); // NOI18N
        stopButton.setEnabled(false);
        stopButton.setName("stopButton"); // NOI18N
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        labelMem.setText(resourceMap.getString("labelMem.text")); // NOI18N
        labelMem.setName("labelMem"); // NOI18N

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        openMenuItem.setText(resourceMap.getString("openMenuItem.text")); // NOI18N
        openMenuItem.setName("openMenuItem"); // NOI18N
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);

        saveAsMenuItem.setText(resourceMap.getString("saveAsMenuItem.text")); // NOI18N
        saveAsMenuItem.setName("saveAsMenuItem"); // NOI18N
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveAsMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        memMenuItem.setText(resourceMap.getString("memMenuItem.text")); // NOI18N
        memMenuItem.setName("memMenuItem"); // NOI18N
        memMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(memMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMem, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(executeButton))
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(executeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelMem, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stopButton))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        consoleTextArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        executeButton.setEnabled(false);
        intertpreter = new Interpreter(new Reader(scriptEditorTextPane.getText()), this);
        intertpreter.start();
        stopButton.setEnabled(true);
    }//GEN-LAST:event_executeButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        intertpreter.interrupt();
        intertpreter = null;
        System.runFinalization();
        System.gc();
        stopButton.setEnabled(false);
        executeButton.setEnabled(true);
}//GEN-LAST:event_stopButtonActionPerformed

    private void memMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memMenuItemActionPerformed
        memusage = new MemUsageView();
        memusage.setVisible(true);
    }//GEN-LAST:event_memMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        String source = filechoose();
        if (!source.equals("")) {
            if (!source.endsWith(".script")) {
                source += ".script";
            }
            try {
                BufferedWriter out = null;
                out = new BufferedWriter(new FileWriter(source, true));
                out.write(scriptEditorTextPane.getText());
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(Scripter.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

}//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        String s = filechooseOpen();
        if (!s.equals("")) {
            try {
                BufferedReader r = new BufferedReader(new FileReader(s));
                StringBuilder str = new StringBuilder();
                String line;
                while ((line = r.readLine()) != null) {
                    str.append(line + "\n");
                }
                scriptEditorTextPane.setText(str.toString());
            } catch (IOException ex) {
                Logger.getLogger(Scripter.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_openMenuItemActionPerformed
   
    private String filechooseOpen() {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        chooser.setFileFilter(new javax.swing.filechooser.FileFilter() {

            public boolean accept(File f) {
                String name = f.getName().toLowerCase();
                return name.endsWith(".script") || f.isDirectory();
            }

            public String getDescription() {
                return "Script files";
            }
        });
        int r = chooser.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            String name1 = chooser.getSelectedFile().getAbsolutePath();
            return name1;
        }
        return "";
    }

    private String filechoose() {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        chooser.setFileFilter(new javax.swing.filechooser.FileFilter() {

            public boolean accept(File f) {
                String name = f.getName().toLowerCase();
                return name.endsWith(".script") || f.isDirectory();
            }

            public String getDescription() {
                return "Script files";
            }
        });
        int r = chooser.showSaveDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            String name1 = chooser.getSelectedFile().getAbsolutePath();
            return name1;
        }
        return "";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JButton executeButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel labelMem;
    private javax.swing.JMenuItem memMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JTextPane scriptEditorTextPane;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
