/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SynonymsView.java
 *
 * Created on Feb 1, 2010, 4:30:23 PM
 */

package com.ben.IA.Views.utilities;

import com.ben.IA.brain.database.WordSerialDatabase;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author benoitdaccache
 */
public class SynonymsView extends javax.swing.JFrame {
    private Hashtable<String, ArrayList<String>> table;
    private DefaultListModel listModel;
    private String word;

    /** Creates new form SynonymsView */
    public SynonymsView(Hashtable<String, ArrayList<String>> table) {
        this.table = table;
        initComponents();
        initList();
    }

    private void expandList(String word) {
        Iterator it = table.get(word).iterator();
        synonymsTextArea.setText("");
        while(it.hasNext()){
            synonymsTextArea.setText(synonymsTextArea.getText()+it.next()+"\n");
        }
    }

    private ArrayList<String> getArrayListOfSynonyms() {
        ArrayList<String> list = new ArrayList<String>();
        String text = synonymsTextArea.getText();
        while(text.indexOf("\n")!=-1){
            int i = text.indexOf("\n");
            list.add(text.substring(0, i));
            text = text.substring(i+1);                           
        }
        list.add(text);
        return list;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWordButton = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        wordsList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        synonymsTextArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.ben.IA.App.IAApp.class).getContext().getResourceMap(SynonymsView.class);
        addWordButton.setText(resourceMap.getString("addWordButton.text")); // NOI18N
        addWordButton.setName("addWordButton"); // NOI18N
        addWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordButtonActionPerformed(evt);
            }
        });

        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        wordsList.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("wordsList.border.title"))); // NOI18N
        wordsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        wordsList.setName("wordsList"); // NOI18N
        wordsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wordsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(wordsList);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        synonymsTextArea.setColumns(20);
        synonymsTextArea.setRows(5);
        synonymsTextArea.setName("synonymsTextArea"); // NOI18N
        jScrollPane2.setViewportView(synonymsTextArea);

        jSplitPane1.setRightComponent(jScrollPane2);

        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setEnabled(false);
        saveButton.setName("saveButton"); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addWordButton, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addGap(126, 126, 126)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addContainerGap())
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addWordButton)
                    .addComponent(saveButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wordsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordsListMouseClicked
        if(evt.getClickCount()>=2){
            this.word = (String) listModel.getElementAt(wordsList.getSelectedIndex());
            expandList(word);
            saveButton.setEnabled(true);
        }
    }//GEN-LAST:event_wordsListMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        WordSerialDatabase.getInstance().updateSynonyms(word, getArrayListOfSynonyms());
}//GEN-LAST:event_saveButtonActionPerformed

    private void addWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordButtonActionPerformed
        int i = wordsList.getSelectedIndex();
        String ans = JOptionPane.showInputDialog("New Word");
        listModel.addElement(ans);
        WordSerialDatabase.getInstance().addWord(ans);
        wordsList.setModel(listModel);
        wordsList.setSelectedIndex(i);
    }//GEN-LAST:event_addWordButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWordButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextArea synonymsTextArea;
    private javax.swing.JList wordsList;
    // End of variables declaration//GEN-END:variables

    private void initList() {
        listModel = new DefaultListModel();
        Enumeration<String> e = table.keys();
        while(e.hasMoreElements()){
            listModel.addElement(e.nextElement());
        }
        wordsList.setModel(listModel);
    }

}
